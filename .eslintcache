[{"E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\index.js":"1","E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\App.js":"2","E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\components\\login\\firebase.config.js":"3","E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\reportWebVitals.js":"4","E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\pages\\Dashboard.js":"5","E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\components\\Footer.js":"6","E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\pages\\Login.js":"7","E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\components\\Header.js":"8","E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\components\\login\\LogInManager.js":"9"},{"size":523,"mtime":1607004020421,"results":"10","hashOfConfig":"11"},{"size":949,"mtime":1607044106499,"results":"12","hashOfConfig":"11"},{"size":353,"mtime":1607618382644,"results":"13","hashOfConfig":"11"},{"size":362,"mtime":1606998684728,"results":"14","hashOfConfig":"11"},{"size":175,"mtime":1607003389041,"results":"15","hashOfConfig":"11"},{"size":458,"mtime":1607004784474,"results":"16","hashOfConfig":"11"},{"size":11269,"mtime":1607694945427,"results":"17","hashOfConfig":"11"},{"size":1378,"mtime":1607687890777,"results":"18","hashOfConfig":"11"},{"size":5005,"mtime":1607694670142,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qzo5a3",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\index.js",[],"E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\App.js",[],"E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\components\\login\\firebase.config.js",[],"E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\reportWebVitals.js",[],"E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\pages\\Dashboard.js",[],"E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\components\\Footer.js",[],"E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\pages\\Login.js",["39"],"E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\components\\Header.js",[],"E:\\Web-Development-Final-Project\\apptivism-private-limited\\client\\src\\components\\login\\LogInManager.js",["40","41"],"import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport firebaseConfig from \"./firebase.config\"\r\n\r\n\r\n\r\n\r\nexport const initializeLoginFramework = () => {\r\n\r\n    // Set condition to protect firebase Re-render error\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig)\r\n    }\r\n}\r\n\r\n// Google sign in handler\r\nexport const handleGoogleSignIn = () => {\r\n    // Set google provider\r\n    const googleProvider = new firebase.auth.GoogleAuthProvider()\r\n    // Open google pop up\r\n    return firebase.auth().signInWithPopup(googleProvider)\r\n        .then(result => {\r\n            const { displayName, email, photoURL } = result.user\r\n            // State for sign in user\r\n            const signInUser = {\r\n                isSignedIn: true,\r\n                name: displayName,\r\n                email: email,\r\n                photo: photoURL,\r\n                success: true,\r\n            }\r\n            return signInUser\r\n        })\r\n        .catch(error => {\r\n            const newUserInfo = { }\r\n            newUserInfo.error = error.message\r\n            newUserInfo.success = false\r\n            return newUserInfo\r\n        })\r\n}\r\n\r\n// Facebook sign in handler\r\nexport const handleFbSignIn = () => {\r\n    // Set facebook provider\r\n    const FbProvider = new firebase.auth.FacebookAuthProvider()\r\n     // Open facebook pop up\r\n    return firebase.auth().signInWithPopup(FbProvider)\r\n        .then(result => {\r\n            const token = result.credential.accessToken\r\n            const { displayName, email, photoURL } = result.user\r\n            // State for sign in user\r\n            const signInUser = {\r\n                isSignedIn: true,\r\n                name: displayName,\r\n                email: email,\r\n                photo: photoURL, \r\n                success: true,\r\n            }\r\n            return signInUser\r\n        })\r\n        .catch(error => {\r\n            const newUserInfo = { }\r\n            newUserInfo.error = error.message\r\n            newUserInfo.success = false\r\n            return newUserInfo\r\n        })\r\n}\r\n\r\n// GitHub sign in handler\r\nexport const handleGitHubSignIn = () => {\r\n    // Set github provider\r\n    const gitHubProvider = new firebase.auth.GithubAuthProvider()\r\n    // Open GitHub pop up\r\n    return firebase.auth().signInWithPopup(gitHubProvider)\r\n        .then(result => {\r\n            const token = result.credential.accessToken\r\n            const { displayName, email, photoURL } = result.user\r\n            // State for sign in user\r\n            const signInUser = {\r\n                isSignedIn: true,\r\n                name: displayName,\r\n                email: email,\r\n                photo: photoURL, \r\n                success: true,\r\n            }\r\n            return signInUser\r\n        })\r\n        .catch(function (error) {\r\n            const newUserInfo = { }\r\n            newUserInfo.error = error.message\r\n            newUserInfo.success = false\r\n            return newUserInfo\r\n        })\r\n}\r\n    \r\n// Sign out handler\r\nexport const handleSignOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(result => {\r\n            const signOutUser = {\r\n                isSignedIn: false,\r\n                name: '',\r\n                email: '',\r\n                photo: '',  \r\n            }\r\n            return signOutUser\r\n        })\r\n        .catch(error => {\r\n            console.log(error.message)\r\n        }) \r\n}\r\n\r\n// Sign up with email and password\r\nexport const createUserWithEmailAndPassword = (name, email, password) => { \r\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then(response => {   \r\n            const newUserInfo = response.user\r\n            newUserInfo.error = ''\r\n            newUserInfo.SignUpSuccess = true\r\n            updateUserName(name)\r\n            return newUserInfo\r\n        })\r\n        .catch(error => {\r\n            const newUserInfo = { }\r\n            newUserInfo.error = error.message\r\n            newUserInfo.SignUpSuccess = false\r\n            return newUserInfo\r\n        })\r\n}\r\n\r\n// Sign In with email and password\r\nexport const signInWithEmailAndPassword = (email, password) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then((response) => {\r\n            const newUserInfo = response.user\r\n            newUserInfo.success = true\r\n            newUserInfo.error = ''\r\n            return newUserInfo\r\n        })\r\n        .catch(error => {\r\n            const newUserInfo = {}\r\n            newUserInfo.error = error.message\r\n            newUserInfo.success = false\r\n            return newUserInfo\r\n        })\r\n}\r\n\r\n// Send new user info to firebase\r\nconst updateUserName = (name) => {\r\n    const user = firebase.auth().currentUser\r\n    user.updateProfile({    \r\n        displayName: name, \r\n    })\r\n        .then(() => {  \r\n            console.log('User name updated successfully')\r\n        })\r\n        .catch((error) => {      \r\n            console.log('Error updating profile')\r\n        })\r\n}\r\n    \r\n\r\n",{"ruleId":"42","severity":1,"message":"43","line":29,"column":12,"nodeType":"44","messageId":"45","endLine":29,"endColumn":24},{"ruleId":"42","severity":1,"message":"46","line":49,"column":19,"nodeType":"44","messageId":"45","endLine":49,"endColumn":24},{"ruleId":"42","severity":1,"message":"46","line":76,"column":19,"nodeType":"44","messageId":"45","endLine":76,"endColumn":24},"no-unused-vars","'loggedInUser' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used."]